{"title":"ubuntu20.04搭建kvm_bridge网桥教程","uid":"d151387cde5693b6d054d4b81d0393bc","slug":"ubuntuKvmBridge","date":"2021-11-10T16:00:00.000Z","updated":"2022-09-28T07:19:23.112Z","comments":true,"path":"api/articles/ubuntuKvmBridge.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fgo2live.cn%2Fwp-content%2Fuploads%2F2011%2F05%2F160229075570291.jpg&refer=http%3A%2F%2Fgo2live.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1636906835&t=a94ef405bde0b307b6bc3d5ecfeb896c","content":"<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><p>主机配置如下：</p>\n<ul>\n<li><p>电脑为笔记本</p>\n</li>\n<li><p>处理器 intel i5-6300 HQ 2.30GHz * 4</p>\n</li>\n<li><p>内存 16G</p>\n</li>\n<li><p>硬盘 500G 固态</p>\n</li>\n<li><p>系统 Ubuntu 20.04.3 LTS 64-bit</p>\n</li>\n</ul>\n<h1 id=\"检查\"><a href=\"#检查\" class=\"headerlink\" title=\"检查\"></a>检查</h1><h2 id=\"检查CPU是否支持虚拟化\"><a href=\"#检查CPU是否支持虚拟化\" class=\"headerlink\" title=\"检查CPU是否支持虚拟化\"></a>检查CPU是否支持虚拟化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ grep -Eoc &#39;(vmx|svm)&#39; &#x2F;proc&#x2F;cpuinfo\n\n# 输出大于 0 即可\n8</code></pre>\n\n<p>输出结果大于0表示支持虚拟化</p>\n<h2 id=\"检查主板是否开启虚拟化\"><a href=\"#检查主板是否开启虚拟化\" class=\"headerlink\" title=\"检查主板是否开启虚拟化\"></a>检查主板是否开启虚拟化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo apt update &amp;&amp; sudo apt install cpu-checker -y\n$ kvm-ok\n\n# 以下输出结果可用\nINFO: &#x2F;dev&#x2F;kvm exists\nKVM acceleration can be used</code></pre>\n\n<h1 id=\"安装KVM套件\"><a href=\"#安装KVM套件\" class=\"headerlink\" title=\"安装KVM套件\"></a>安装KVM套件</h1><h2 id=\"安装相关包\"><a href=\"#安装相关包\" class=\"headerlink\" title=\"安装相关包\"></a>安装相关包</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst virt-manager -y</code></pre>\n\n<p><code>qemu-kvm</code>: 提供硬件底层虚拟化。<br><code>libvirt-daemon-system</code>: 为 libvirt作为系统服务的守护程序运行。<br><code>libvirt-clients</code>: 为不同的虚拟机提供长期稳定的C API<br><code>bridge-utils</code>:提供网络桥接功能<br><code>virtinst</code>: 为libvirt创建虚拟机提供一系列的命令行工作<br><code>virt-manager</code>: KVM虚拟机管理图形界面，如果服务器没有安装图形化界面，没有必要安装它。</p>\n<h2 id=\"检查-libvirtd\"><a href=\"#检查-libvirtd\" class=\"headerlink\" title=\"检查 libvirtd\"></a>检查 libvirtd</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo systemctl is-active libvirtd\n\n# 输出以下结果表示可用\nactive</code></pre>\n\n<h2 id=\"将当前用户加入到-libvirt-和-kvm-用户组\"><a href=\"#将当前用户加入到-libvirt-和-kvm-用户组\" class=\"headerlink\" title=\"将当前用户加入到 libvirt 和 kvm 用户组\"></a>将当前用户加入到 libvirt 和 kvm 用户组</h2><p>USER 为当前用户</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo usermod -aG libvirt USER\nsudo usermod -aG kvm USER</code></pre>\n\n<h1 id=\"配置网桥\"><a href=\"#配置网桥\" class=\"headerlink\" title=\"配置网桥\"></a>配置网桥</h1><ol>\n<li><code>sudo vim /etc/sysctl.d/bridge.conf</code></li>\n</ol>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">net.bridge.bridge-nf-call-ip6tables&#x3D;0\nnet.bridge.bridge-nf-call-iptables&#x3D;0\nnet.bridge.bridge-nf-call-arptables&#x3D;0</code></pre>\n\n<ol start=\"2\">\n<li><code>sudo vim /etc/udev/rules.d/99-bridge.rules</code></li>\n</ol>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ACTION&#x3D;&#x3D;&quot;add&quot;, SUBSYSTEM&#x3D;&#x3D;&quot;module&quot;, KERNEL&#x3D;&#x3D;&quot;br_netfilter&quot;, \\           RUN+&#x3D;&quot;&#x2F;sbin&#x2F;sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;bridge.conf&quot;</code></pre>\n\n<ol start=\"3\">\n<li>ip link</li>\n</ol>\n<p>KVM 安装后，会有默认创建的接口，需要删除</p>\n<p>查看接口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ip link\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eno1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link&#x2F;ether d4:be:d9:f3:1e:5f brd ff:ff:ff:ff:ff:ff\n6: virbr0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link&#x2F;ether 52:54:00:1d:5b:25 brd ff:ff:ff:ff:ff:ff\n7: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc fq_codel master virbr0 state DOWN mode DEFAULT group default qlen 1000\n    link&#x2F;ether 52:54:00:1d:5b:25 brd ff:ff:ff:ff:ff:ff</code></pre>\n\n<p>删除默认的网口</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo virsh net-destroy default\n$ sudo virsh net-undefine default</code></pre>\n\n<p>再次查看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ip link\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eno1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link&#x2F;ether d4:be:d9:f3:1e:5f brd ff:ff:ff:ff:ff:ff</code></pre>\n\n<p>如果还有，则需要手动删除</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ip link delete virbr0 type brigde \n$ ip link delete virbr0-nic</code></pre>\n\n<ol start=\"4\">\n<li><code>sudo vim /etc/netplan/00-installer-config.yaml</code></li>\n</ol>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">network:\n  ethernets:\n    eno1:\n      dhcp4: false\n      dhcp6: false\n  bridges:\n    br0:\n      interfaces: [ eno1 ]\n      addresses: [ 192.168.0.100&#x2F;24 ]\n      gateway4: 192.168.0.1\n      mtu: 1500\n      nameservers:\n        addresses: [ 8.8.8.8,8.8.4.4 ]\n      parameters:\n        stp: true\n        forward-delay: 4\n      dhcp4: no\n      dhcp6: no\n  version: 2</code></pre>\n\n<p>注意自行更换：</p>\n<p>eno1： 为笔记本有线网卡的网卡名，不能使用无线网卡</p>\n<p>addresses：里面的ip为可局域网中的真实 ip 地址和掩码</p>\n<p>gateway4：网关为局域网中的网关</p>\n<ol start=\"5\">\n<li><code>sudo netplan apply</code></li>\n</ol>\n<p>执行后则 br0 网桥就会被创建成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ip link\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eno1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel master br0 state UP mode DEFAULT group default qlen 1000\n    link&#x2F;ether c8:d3:ff:dd:74:f1 brd ff:ff:ff:ff:ff:ff\n    altname enp9s0\n3: wlo1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link&#x2F;ether c8:21:58:17:5a:bb brd ff:ff:ff:ff:ff:ff\n    altname wlp8s0\n4: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link&#x2F;ether c8:d3:ff:dd:74:f1 brd ff:ff:ff:ff:ff:ff</code></pre>\n\n<ol start=\"6\">\n<li><code>vim host-bridge.xml</code></li>\n</ol>\n<p>创建kvm网桥配置文件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n&lt;network&gt;\n    &lt;name&gt;host-bridge&lt;&#x2F;name&gt;\n    &lt;forward mode&#x3D;&quot;bridge&quot;&#x2F;&gt;\n    &lt;bridge name&#x3D;&quot;br0&quot;&#x2F;&gt;\n&lt;&#x2F;network&gt;</code></pre>\n\n<ol start=\"7\">\n<li>创建 kvm 的网桥</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo virsh net-define host-bridge.xml\n$ sudo virsh net-start host-bridge\n$ sudo virsh net-autostart host-bridge</code></pre>\n\n<ol start=\"8\">\n<li>查看是否创建成功</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ virsh net-list --all\n Name          State    Autostart   Persistent\n------------------------------------------------\n host-bridge   active   yes         yes</code></pre>\n\n<h1 id=\"创建虚拟机\"><a href=\"#创建虚拟机\" class=\"headerlink\" title=\"创建虚拟机\"></a>创建虚拟机</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo virt-install --name&#x3D;centos7_2003 --ram&#x3D;4096 --vcpus&#x3D;2 --virt-type&#x3D;kvm --os-type&#x3D;linux --os-variant&#x3D;centos7.0 --network default,model&#x3D;virtio --graphics&#x3D;vnc,password&#x3D;123123,port&#x3D;5911,listen&#x3D;0.0.0.0 --noautoconsole --accelerate --cdrom&#x3D;&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images&#x2F;CentOS-7-x86_64-Minimal-2003.iso --disk path&#x3D;&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images&#x2F;CentOS7.qcow2,device&#x3D;disk,format&#x3D;qcow2,bus&#x3D;virtio,cache&#x3D;writeback,size&#x3D;40</code></pre>\n\n<p>可自行修改：</p>\n<p><code>--name=centos7_2003</code> 为虚拟机名字</p>\n<p><code>--ram=4096</code> 为虚拟机内存</p>\n<p><code>--vcpus=2</code> 为cpu核数</p>\n<p><code>password=123123</code> 为访问虚拟机界面时需要的密码（可以删除掉）</p>\n<p><code>-cdrom=/var/lib/libvirt/images/CentOS-7-x86_64-Minimal-2003.iso</code><br>为镜像路径，自行下载 <a href=\"http://mirrors.aliyun.com/centos/7/isos/x86_64/\">阿里云centos7</a></p>\n<p><code>-disk path=/var/lib/libvirt/images/CentOS7.qcow2</code> disk存放路径</p>\n<p><code>size=40</code> 磁盘大小</p>\n<p>检查是否运行成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ virsh list --all\n Id   Name           State\n------------------------------\n 1    centos7_2003   running</code></pre>\n\n<h1 id=\"配置虚拟机静态-ip\"><a href=\"#配置虚拟机静态-ip\" class=\"headerlink\" title=\"配置虚拟机静态 ip\"></a>配置虚拟机静态 ip</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0\n\n# 内容如下\nTYPE&#x3D;Ethernet\nPROXY_METHOD&#x3D;none\nBROWSER_ONLY&#x3D;no\nBOOTPROTO&#x3D;static # 需要改为 static\nDEFROUTE&#x3D;yes\nIPV4_FAILURE_FATAL&#x3D;no\nIPV6INIT&#x3D;yes\nIPV6_AUTOCONF&#x3D;yes\nIPV6_DEFROUTE&#x3D;yes\nIPV6_FAILURE_FATAL&#x3D;no\nIPV6_ADDR_GEN_MODE&#x3D;stable-privacy\nNAME&#x3D;eth0\nUUID&#x3D;c45492fe-bc6f-40f4-a799-e620660c5b61\nDEVICE&#x3D;eth0\nONBOOT&#x3D;yes # 需要改为 yes\n\nIPADDR&#x3D;192.168.0.100 # 和 br0 相同网络下的 ip\nMETMASK&#x3D;255.255.255.0 # 和 br0 相同的掩码\nDNS1&#x3D;114.114.114.114\nGATEWAY&#x3D;192.168.0.1 # 和 br0 相同的网关\nIPV6_PEERNDS&#x3D;yes\nIPV6_PEEROUTES&#x3D;yes\nIPV6_PRIVACY&#x3D;no\n# 内容结束</code></pre>\n\n<p>查看是否连通</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#重启网络\n$ systemctl restart NetworkManager\n\n# 查看网络是否连通\n$ ping 114.114.114.114\nPING 114.114.114.114 (114.114.114.114) 56(84) bytes of data.\n64 bytes from 114.114.114.114: icmp_seq&#x3D;1 ttl&#x3D;94 time&#x3D;39.9 ms\n64 bytes from 114.114.114.114: icmp_seq&#x3D;2 ttl&#x3D;68 time&#x3D;39.7 ms\n$ ping www.baidu.com\nPING www.a.shifen.com (220.181.38.149) 56(84) bytes of data.\n64 bytes from 220.181.38.149 (220.181.38.149): icmp_seq&#x3D;1 ttl&#x3D;52 time&#x3D;43.6 ms\n64 bytes from 220.181.38.149 (220.181.38.149): icmp_seq&#x3D;2 ttl&#x3D;52 time&#x3D;43.7 ms</code></pre>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>宿主机重启后，所有相关网络都会自动创建，亲测有效</p>\n<p><a href=\"https://www.u22e.com/2728.html\">kvm搭建</a></p>\n<p><a href=\"https://levelup.gitconnected.com/how-to-setup-bridge-networking-with-kvm-on-ubuntu-20-04-9c560b3e3991\">网桥搭建，国外网站，不一定都能打开</a></p>\n<h1 id=\"下一节\"><a href=\"#下一节\" class=\"headerlink\" title=\"下一节\"></a>下一节</h1><p><a href=\"image\">搭建 k8s 集群</a></p>\n","feature":true,"text":"前提主机配置如下： 电脑为笔记本 处理器 intel i5-6300 HQ 2.30GHz * 4 内存 16G 硬盘 500G 固态 系统 Ubuntu 20.04.3 LTS 64-bit 检查检查CPU是否支持虚拟化$ grep -Eoc &#39;(vmx|svm)&#3...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"教程","slug":"教程","count":5,"path":"api/categories/教程.json"}],"tags":[{"name":"UBUNTU","slug":"UBUNTU","count":1,"path":"api/tags/UBUNTU.json"},{"name":"KVM","slug":"KVM","count":1,"path":"api/tags/KVM.json"},{"name":"LINUX-BRIDGE","slug":"LINUX-BRIDGE","count":1,"path":"api/tags/LINUX-BRIDGE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%8F%90\"><span class=\"toc-text\">前提</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">检查</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5CPU%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81%E8%99%9A%E6%8B%9F%E5%8C%96\"><span class=\"toc-text\">检查CPU是否支持虚拟化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5%E4%B8%BB%E6%9D%BF%E6%98%AF%E5%90%A6%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%8C%96\"><span class=\"toc-text\">检查主板是否开启虚拟化</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85KVM%E5%A5%97%E4%BB%B6\"><span class=\"toc-text\">安装KVM套件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E5%8C%85\"><span class=\"toc-text\">安装相关包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5-libvirtd\"><span class=\"toc-text\">检查 libvirtd</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%86%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E5%88%B0-libvirt-%E5%92%8C-kvm-%E7%94%A8%E6%88%B7%E7%BB%84\"><span class=\"toc-text\">将当前用户加入到 libvirt 和 kvm 用户组</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E7%BD%91%E6%A1%A5\"><span class=\"toc-text\">配置网桥</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA\"><span class=\"toc-text\">创建虚拟机</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%99%E6%80%81-ip\"><span class=\"toc-text\">配置虚拟机静态 ip</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E4%B8%80%E8%8A%82\"><span class=\"toc-text\">下一节</span></a></li></ol>","author":{"name":"SKY","slug":"sky","avatar":"https://cycling-bucket.oss-cn-shenzhen.aliyuncs.com/littleboy/image-20211223171018733.png","link":"/","description":"Welcome to sky home","socials":{"github":"https://github.com/littleboyfury","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_38916811","juejin":"https://juejin.cn/user/2049948533144104","customs":{}}},"mapped":true,"prev_post":{"title":"Deploy K8S","uid":"6a10bf4989cdd89dde18ea8bad304bb7","slug":"k8s","date":"2021-11-28T15:00:00.000Z","updated":"2022-09-28T07:19:23.110Z","comments":true,"path":"api/articles/k8s.json","keywords":null,"cover":"https://cycling-bucket.oss-cn-shenzhen.aliyuncs.com/littleboy/image-20211128225817137.png","text":"三节点 k8s 部署1：机器准备这里我们准备三台虚拟机，一台master，二台node 机器准备教程 ubuntu 搭建 kvm 安装虚拟机 2：安装前的环境确认所有机器都需要执行： a：三台机器都可以联网，uname -a查看内核是否大于等于3.1 b：关闭三台机器的防火墙 s...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"教程","slug":"教程","count":5,"path":"api/categories/教程.json"}],"tags":[{"name":"K8S","slug":"K8S","count":1,"path":"api/tags/K8S.json"}],"author":{"name":"SKY","slug":"sky","avatar":"https://cycling-bucket.oss-cn-shenzhen.aliyuncs.com/littleboy/image-20211223171018733.png","link":"/","description":"Welcome to sky home","socials":{"github":"https://github.com/littleboyfury","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_38916811","juejin":"https://juejin.cn/user/2049948533144104","customs":{}}},"feature":true},"next_post":{}}